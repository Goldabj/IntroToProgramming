"""
The Python Capstone Project.

CSSE 120 - Introduction to Software Development.
Team members: Alan, Brendan, Scott(all of them).

The primary author of this module is: Brendan Goldacker.
"""
# DONE: Put the names of ALL team members in the above where indicated.
#       Put YOUR NAME in the above where indicated.

import m0
import m2
import m3
import m4

import tkinter
from tkinter import ttk
import new_create


def main():
    """
    Tests functions in this module.
    Intended to be used internally by the primary author of this module.
    """
    print('-------------------------------')
    print('Testing functions in module m1:')
    print('-------------------------------')
    root = tkinter.Tk()
    dc = m0.DataContainer()

    frame1 = my_frame(root, dc)
    frame1.grid()

    root.mainloop()


def my_frame(root, dc):
    """
    Constructs and returns a Frame (on the given root window)
    that contains this module's widgets.
    Also sets up callbacks for this module's widgets.

    Preconditions:
      :type root: tkinter.Tk
      :type dc: m0.DataContainer
    """
    frame = ttk.Frame(root, padding=20, relief='raised')

    entry = ttk.Entry(frame, width=8)
    entry.grid()

    button1 = ttk.Button(frame, text='Connect to simulator')
    button1.grid()
    button1['command'] = lambda: connect_using_simulator(dc)

    button2 = ttk.Button(frame, text='connect using port')
    button2.grid()
    button2['command'] = lambda: connect_using_port(entry, dc)

    button3 = ttk.Button(frame, text='Disconnect')
    button3.grid()
    button3['command'] = lambda: disconnect(dc)

    return frame

def connect_using_simulator(dc):
    """connects to the to the irobot simulator. 
    Preconditions:
        :type dc : m0.DataContianer"""
    port = 'sim'
    dc.robot = new_create.Create(port)

def connect_using_port(entry, dc):
    """Connects to the robot by the given prot number. 
        Preconditions:
        :type dc : m0.DataContianer"""
    port = entry.get()
    dc.robot = new_create.Create(port, dc)

def disconnect(dc):
    """Disconnects from the robot
     Preconditions:
        :type dc : m0.DataContianer"""
    dc.robot.shutdown()
    print('robot is disconnected')

# ----------------------------------------------------------------------
# If this module is running at the top level (as opposed to being
# imported by another module), then call the 'main' function.
# ----------------------------------------------------------------------
if __name__ == '__main__':
    main()
